// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Gov.Jag.Embc.Interfaces.Models
{
    using Newtonsoft.Json;
    using System.Linq; using System.ComponentModel.DataAnnotations.Schema;

    /// <summary>
    /// sitemap
    /// </summary>
    public partial class MicrosoftDynamicsCRMsitemap
    {
        /// <summary>
        /// Initializes a new instance of the MicrosoftDynamicsCRMsitemap
        /// class.
        /// </summary>
        public MicrosoftDynamicsCRMsitemap()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MicrosoftDynamicsCRMsitemap
        /// class.
        /// </summary>
        public MicrosoftDynamicsCRMsitemap(System.DateTimeOffset? overwritetime = default(System.DateTimeOffset?), string sitemapxml = default(string), string sitemapnameunique = default(string), long? versionnumber = default(long?), string sitemapidunique = default(string), int? componentstate = default(int?), bool? isappaware = default(bool?), string sitemapname = default(string), string _organizationidValue = default(string), string solutionid = default(string), string sitemapid = default(string), bool? ismanaged = default(bool?), MicrosoftDynamicsCRMsystemuser siteMapModifiedonbehalfby = default(MicrosoftDynamicsCRMsystemuser), MicrosoftDynamicsCRMsystemuser siteMapModifiedby = default(MicrosoftDynamicsCRMsystemuser), MicrosoftDynamicsCRMsystemuser siteMapCreatedonbehalfby = default(MicrosoftDynamicsCRMsystemuser), MicrosoftDynamicsCRMorganization organizationid = default(MicrosoftDynamicsCRMorganization), MicrosoftDynamicsCRMsystemuser siteMapCreatedby = default(MicrosoftDynamicsCRMsystemuser))
        {
            Overwritetime = overwritetime;
            Sitemapxml = sitemapxml;
            Sitemapnameunique = sitemapnameunique;
            Versionnumber = versionnumber;
            Sitemapidunique = sitemapidunique;
            Componentstate = componentstate;
            Isappaware = isappaware;
            Sitemapname = sitemapname;
            this._organizationidValue = _organizationidValue;
            Solutionid = solutionid;
            Sitemapid = sitemapid;
            Ismanaged = ismanaged;
            SiteMapModifiedonbehalfby = siteMapModifiedonbehalfby;
            SiteMapModifiedby = siteMapModifiedby;
            SiteMapCreatedonbehalfby = siteMapCreatedonbehalfby;
            Organizationid = organizationid;
            SiteMapCreatedby = siteMapCreatedby;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "overwritetime")]
        public System.DateTimeOffset? Overwritetime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sitemapxml")]
        public string Sitemapxml { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sitemapnameunique")]
        public string Sitemapnameunique { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "versionnumber")]
        public long? Versionnumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sitemapidunique")]
        public string Sitemapidunique { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "componentstate")]
        public int? Componentstate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isappaware")]
        public bool? Isappaware { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sitemapname")]
        public string Sitemapname { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_organizationid_value")]
        public string _organizationidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "solutionid")]
        public string Solutionid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sitemapid")]
        public string Sitemapid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ismanaged")]
        public bool? Ismanaged { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SiteMap_modifiedonbehalfby")]
        public MicrosoftDynamicsCRMsystemuser SiteMapModifiedonbehalfby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SiteMap_modifiedby")]
        public MicrosoftDynamicsCRMsystemuser SiteMapModifiedby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SiteMap_createdonbehalfby")]
        public MicrosoftDynamicsCRMsystemuser SiteMapCreatedonbehalfby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "organizationid")]
        public MicrosoftDynamicsCRMorganization Organizationid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SiteMap_createdby")]
        public MicrosoftDynamicsCRMsystemuser SiteMapCreatedby { get; set; }

    }
}
