// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Gov.Jag.Embc.Interfaces.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq; using System.ComponentModel.DataAnnotations.Schema;

    /// <summary>
    /// incident
    /// </summary>
    public partial class MicrosoftDynamicsCRMincident
    {
        /// <summary>
        /// Initializes a new instance of the MicrosoftDynamicsCRMincident
        /// class.
        /// </summary>
        public MicrosoftDynamicsCRMincident()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MicrosoftDynamicsCRMincident
        /// class.
        /// </summary>
        public MicrosoftDynamicsCRMincident(string _firstresponsebykpiidValue = default(string), int? customersatisfactioncode = default(int?), string _existingcaseValue = default(string), bool? customercontacted = default(bool?), bool? decremententitlementterm = default(bool?), string _slaidValue = default(string), System.DateTimeOffset? escalatedon = default(System.DateTimeOffset?), string _primarycontactidValue = default(string), string stageid = default(string), string ticketnumber = default(string), string _resolvebykpiidValue = default(string), string _modifiedonbehalfbyValue = default(string), int? onholdtime = default(int?), string _entitlementidValue = default(string), string _accountidValue = default(string), int? firstresponseslastatus = default(int?), bool? isdecrementing = default(bool?), string _owningteamValue = default(string), int? resolvebyslastatus = default(int?), System.DateTimeOffset? resolveby = default(System.DateTimeOffset?), long? versionnumber = default(long?), string incidentid = default(string), string traversedpath = default(string), bool? activitiescomplete = default(bool?), string _slainvokedidValue = default(string), bool? isescalated = default(bool?), int? timezoneruleversionnumber = default(int?), string description = default(string), int? servicestage = default(int?), string entityimageUrl = default(string), int? statuscode = default(int?), string _productidValue = default(string), bool? firstresponsesent = default(bool?), string _owneridValue = default(string), bool? blockedprofile = default(bool?), System.DateTimeOffset? responseby = default(System.DateTimeOffset?), string _parentcaseidValue = default(string), int? caseorigincode = default(int?), string _modifiedbyValue = default(string), int? billedserviceunits = default(int?), string _customeridValue = default(string), string _owningbusinessunitValue = default(string), string processid = default(string), int? utcconversiontimezonecode = default(int?), int? contractservicelevelcode = default(int?), System.DateTimeOffset? lastonholdtime = default(System.DateTimeOffset?), int? importsequencenumber = default(int?), string _createdbyexternalpartyValue = default(string), string _contractdetailidValue = default(string), string productserialnumber = default(string), string _contactidValue = default(string), string _modifiedbyexternalpartyValue = default(string), int? messagetypecode = default(int?), object exchangerate = default(object), double? influencescore = default(double?), int? numberofchildincidents = default(int?), int? severitycode = default(int?), string _masteridValue = default(string), string _owninguserValue = default(string), string _kbarticleidValue = default(string), string entityimageid = default(string), string _contractidValue = default(string), long? entityimageTimestamp = default(long?), string emailaddress = default(string), string _createdonbehalfbyValue = default(string), System.DateTimeOffset? followupby = default(System.DateTimeOffset?), string title = default(string), string _createdbyValue = default(string), int? casetypecode = default(int?), bool? routecase = default(bool?), System.DateTimeOffset? createdon = default(System.DateTimeOffset?), string _transactioncurrencyidValue = default(string), bool? merged = default(bool?), bool? followuptaskcreated = default(bool?), string _socialprofileidValue = default(string), string _subjectidValue = default(string), int? prioritycode = default(int?), System.DateTimeOffset? modifiedon = default(System.DateTimeOffset?), double? sentimentvalue = default(double?), int? incidentstagecode = default(int?), int? actualserviceunits = default(int?), bool? checkemail = default(bool?), System.DateTimeOffset? overriddencreatedon = default(System.DateTimeOffset?), int? statecode = default(int?), object entityimage = default(object), IList<MicrosoftDynamicsCRMsharepointdocumentlocation> incidentSharePointDocumentLocations = default(IList<MicrosoftDynamicsCRMsharepointdocumentlocation>), MicrosoftDynamicsCRMsystemuser createdby = default(MicrosoftDynamicsCRMsystemuser), MicrosoftDynamicsCRMsystemuser createdonbehalfby = default(MicrosoftDynamicsCRMsystemuser), MicrosoftDynamicsCRMsystemuser modifiedby = default(MicrosoftDynamicsCRMsystemuser), MicrosoftDynamicsCRMsystemuser modifiedonbehalfby = default(MicrosoftDynamicsCRMsystemuser), MicrosoftDynamicsCRMsystemuser owninguser = default(MicrosoftDynamicsCRMsystemuser), MicrosoftDynamicsCRMteam owningteam = default(MicrosoftDynamicsCRMteam), MicrosoftDynamicsCRMprincipal ownerid = default(MicrosoftDynamicsCRMprincipal), MicrosoftDynamicsCRMbusinessunit owningbusinessunit = default(MicrosoftDynamicsCRMbusinessunit), IList<MicrosoftDynamicsCRMactivitypointer> incidentActivityPointers = default(IList<MicrosoftDynamicsCRMactivitypointer>), IList<MicrosoftDynamicsCRMsyncerror> incidentSyncErrors = default(IList<MicrosoftDynamicsCRMsyncerror>), IList<MicrosoftDynamicsCRMactivityparty> incidentActivityParties = default(IList<MicrosoftDynamicsCRMactivityparty>), IList<MicrosoftDynamicsCRMduplicaterecord> incidentDuplicateMatchingRecord = default(IList<MicrosoftDynamicsCRMduplicaterecord>), IList<MicrosoftDynamicsCRMduplicaterecord> incidentDuplicateBaseRecord = default(IList<MicrosoftDynamicsCRMduplicaterecord>), IList<MicrosoftDynamicsCRMasyncoperation> incidentAsyncOperations = default(IList<MicrosoftDynamicsCRMasyncoperation>), IList<MicrosoftDynamicsCRMmailboxtrackingfolder> incidentMailboxTrackingFolder = default(IList<MicrosoftDynamicsCRMmailboxtrackingfolder>), IList<MicrosoftDynamicsCRMprocesssession> incidentProcessSessions = default(IList<MicrosoftDynamicsCRMprocesssession>), IList<MicrosoftDynamicsCRMbulkdeletefailure> incidentBulkDeleteFailures = default(IList<MicrosoftDynamicsCRMbulkdeletefailure>), IList<MicrosoftDynamicsCRMprincipalobjectattributeaccess> incidentPrincipalobjectattributeaccess = default(IList<MicrosoftDynamicsCRMprincipalobjectattributeaccess>), MicrosoftDynamicsCRMprocessstage stageidProcessstage = default(MicrosoftDynamicsCRMprocessstage), IList<MicrosoftDynamicsCRMappointment> incidentAppointments = default(IList<MicrosoftDynamicsCRMappointment>), IList<MicrosoftDynamicsCRMemail> incidentEmails = default(IList<MicrosoftDynamicsCRMemail>), IList<MicrosoftDynamicsCRMfax> incidentFaxes = default(IList<MicrosoftDynamicsCRMfax>), IList<MicrosoftDynamicsCRMletter> incidentLetters = default(IList<MicrosoftDynamicsCRMletter>), IList<MicrosoftDynamicsCRMphonecall> incidentPhonecalls = default(IList<MicrosoftDynamicsCRMphonecall>), IList<MicrosoftDynamicsCRMtask> incidentTasks = default(IList<MicrosoftDynamicsCRMtask>), IList<MicrosoftDynamicsCRMrecurringappointmentmaster> incidentRecurringAppointmentMasters = default(IList<MicrosoftDynamicsCRMrecurringappointmentmaster>), IList<MicrosoftDynamicsCRMsocialactivity> incidentSocialActivities = default(IList<MicrosoftDynamicsCRMsocialactivity>), IList<MicrosoftDynamicsCRMconnection> incidentConnections1 = default(IList<MicrosoftDynamicsCRMconnection>), IList<MicrosoftDynamicsCRMconnection> incidentConnections2 = default(IList<MicrosoftDynamicsCRMconnection>), IList<MicrosoftDynamicsCRMqueueitem> incidentQueueItem = default(IList<MicrosoftDynamicsCRMqueueitem>), IList<MicrosoftDynamicsCRMannotation> incidentAnnotation = default(IList<MicrosoftDynamicsCRMannotation>), MicrosoftDynamicsCRMsla slaidSla = default(MicrosoftDynamicsCRMsla), MicrosoftDynamicsCRMsla slainvokedidSla = default(MicrosoftDynamicsCRMsla), IList<MicrosoftDynamicsCRMslakpiinstance> slakpiinstanceIncident = default(IList<MicrosoftDynamicsCRMslakpiinstance>), IList<MicrosoftDynamicsCRMserviceappointment> incidentServiceAppointments = default(IList<MicrosoftDynamicsCRMserviceappointment>), MicrosoftDynamicsCRMaccount customeridAccount = default(MicrosoftDynamicsCRMaccount), IList<MicrosoftDynamicsCRMactioncard> incidentActioncard = default(IList<MicrosoftDynamicsCRMactioncard>), MicrosoftDynamicsCRMcontact responsiblecontactid = default(MicrosoftDynamicsCRMcontact), MicrosoftDynamicsCRMcontact customeridContact = default(MicrosoftDynamicsCRMcontact), MicrosoftDynamicsCRMcontact primarycontactid = default(MicrosoftDynamicsCRMcontact), MicrosoftDynamicsCRMcontract contractid = default(MicrosoftDynamicsCRMcontract), MicrosoftDynamicsCRMcontractdetail contractdetailid = default(MicrosoftDynamicsCRMcontractdetail), MicrosoftDynamicsCRMentitlement entitlementid = default(MicrosoftDynamicsCRMentitlement), IList<MicrosoftDynamicsCRMincidentresolution> incidentIncidentResolutions = default(IList<MicrosoftDynamicsCRMincidentresolution>), IList<MicrosoftDynamicsCRMpostfollow> incidentPostFollows = default(IList<MicrosoftDynamicsCRMpostfollow>), IList<MicrosoftDynamicsCRMpostregarding> incidentPostRegardings = default(IList<MicrosoftDynamicsCRMpostregarding>), MicrosoftDynamicsCRMincident existingcase = default(MicrosoftDynamicsCRMincident), IList<MicrosoftDynamicsCRMincident> incidentExistingcase = default(IList<MicrosoftDynamicsCRMincident>), MicrosoftDynamicsCRMincident masterid = default(MicrosoftDynamicsCRMincident), IList<MicrosoftDynamicsCRMincident> incidentMasterIncident = default(IList<MicrosoftDynamicsCRMincident>), MicrosoftDynamicsCRMincident parentcaseid = default(MicrosoftDynamicsCRMincident), IList<MicrosoftDynamicsCRMincident> incidentParentIncident = default(IList<MicrosoftDynamicsCRMincident>), IList<MicrosoftDynamicsCRMlead> originatingCaseLead = default(IList<MicrosoftDynamicsCRMlead>), MicrosoftDynamicsCRMkbarticle kbarticleid = default(MicrosoftDynamicsCRMkbarticle), IList<MicrosoftDynamicsCRMknowledgearticleincident> knowledgearticleIncidents = default(IList<MicrosoftDynamicsCRMknowledgearticleincident>), IList<MicrosoftDynamicsCRMknowledgebaserecord> knowledgeBaseRecordIncident = default(IList<MicrosoftDynamicsCRMknowledgebaserecord>), IList<MicrosoftDynamicsCRMphonetocaseprocess> incidentPhonetocaseprocess = default(IList<MicrosoftDynamicsCRMphonetocaseprocess>), MicrosoftDynamicsCRMproduct productid = default(MicrosoftDynamicsCRMproduct), MicrosoftDynamicsCRMslakpiinstance firstresponsebykpiid = default(MicrosoftDynamicsCRMslakpiinstance), MicrosoftDynamicsCRMslakpiinstance resolvebykpiid = default(MicrosoftDynamicsCRMslakpiinstance), MicrosoftDynamicsCRMsocialprofile socialprofileid = default(MicrosoftDynamicsCRMsocialprofile), MicrosoftDynamicsCRMsubject subjectid = default(MicrosoftDynamicsCRMsubject), MicrosoftDynamicsCRMtransactioncurrency transactioncurrencyid = default(MicrosoftDynamicsCRMtransactioncurrency), IList<MicrosoftDynamicsCRMopportunityclose> incidentOpportunityCloses = default(IList<MicrosoftDynamicsCRMopportunityclose>), IList<MicrosoftDynamicsCRMorderclose> incidentOrderCloses = default(IList<MicrosoftDynamicsCRMorderclose>), IList<MicrosoftDynamicsCRMquoteclose> incidentQuoteCloses = default(IList<MicrosoftDynamicsCRMquoteclose>))
        {
            this._firstresponsebykpiidValue = _firstresponsebykpiidValue;
            Customersatisfactioncode = customersatisfactioncode;
            this._existingcaseValue = _existingcaseValue;
            Customercontacted = customercontacted;
            Decremententitlementterm = decremententitlementterm;
            this._slaidValue = _slaidValue;
            Escalatedon = escalatedon;
            this._primarycontactidValue = _primarycontactidValue;
            Stageid = stageid;
            Ticketnumber = ticketnumber;
            this._resolvebykpiidValue = _resolvebykpiidValue;
            this._modifiedonbehalfbyValue = _modifiedonbehalfbyValue;
            Onholdtime = onholdtime;
            this._entitlementidValue = _entitlementidValue;
            this._accountidValue = _accountidValue;
            Firstresponseslastatus = firstresponseslastatus;
            Isdecrementing = isdecrementing;
            this._owningteamValue = _owningteamValue;
            Resolvebyslastatus = resolvebyslastatus;
            Resolveby = resolveby;
            Versionnumber = versionnumber;
            Incidentid = incidentid;
            Traversedpath = traversedpath;
            Activitiescomplete = activitiescomplete;
            this._slainvokedidValue = _slainvokedidValue;
            Isescalated = isescalated;
            Timezoneruleversionnumber = timezoneruleversionnumber;
            Description = description;
            Servicestage = servicestage;
            EntityimageUrl = entityimageUrl;
            Statuscode = statuscode;
            this._productidValue = _productidValue;
            Firstresponsesent = firstresponsesent;
            this._owneridValue = _owneridValue;
            Blockedprofile = blockedprofile;
            Responseby = responseby;
            this._parentcaseidValue = _parentcaseidValue;
            Caseorigincode = caseorigincode;
            this._modifiedbyValue = _modifiedbyValue;
            Billedserviceunits = billedserviceunits;
            this._customeridValue = _customeridValue;
            this._owningbusinessunitValue = _owningbusinessunitValue;
            Processid = processid;
            Utcconversiontimezonecode = utcconversiontimezonecode;
            Contractservicelevelcode = contractservicelevelcode;
            Lastonholdtime = lastonholdtime;
            Importsequencenumber = importsequencenumber;
            this._createdbyexternalpartyValue = _createdbyexternalpartyValue;
            this._contractdetailidValue = _contractdetailidValue;
            Productserialnumber = productserialnumber;
            this._contactidValue = _contactidValue;
            this._modifiedbyexternalpartyValue = _modifiedbyexternalpartyValue;
            Messagetypecode = messagetypecode;
            Exchangerate = exchangerate;
            Influencescore = influencescore;
            Numberofchildincidents = numberofchildincidents;
            Severitycode = severitycode;
            this._masteridValue = _masteridValue;
            this._owninguserValue = _owninguserValue;
            this._kbarticleidValue = _kbarticleidValue;
            Entityimageid = entityimageid;
            this._contractidValue = _contractidValue;
            EntityimageTimestamp = entityimageTimestamp;
            Emailaddress = emailaddress;
            this._createdonbehalfbyValue = _createdonbehalfbyValue;
            Followupby = followupby;
            Title = title;
            this._createdbyValue = _createdbyValue;
            Casetypecode = casetypecode;
            Routecase = routecase;
            Createdon = createdon;
            this._transactioncurrencyidValue = _transactioncurrencyidValue;
            Merged = merged;
            Followuptaskcreated = followuptaskcreated;
            this._socialprofileidValue = _socialprofileidValue;
            this._subjectidValue = _subjectidValue;
            Prioritycode = prioritycode;
            Modifiedon = modifiedon;
            Sentimentvalue = sentimentvalue;
            Incidentstagecode = incidentstagecode;
            Actualserviceunits = actualserviceunits;
            Checkemail = checkemail;
            Overriddencreatedon = overriddencreatedon;
            Statecode = statecode;
            Entityimage = entityimage;
            IncidentSharePointDocumentLocations = incidentSharePointDocumentLocations;
            Createdby = createdby;
            Createdonbehalfby = createdonbehalfby;
            Modifiedby = modifiedby;
            Modifiedonbehalfby = modifiedonbehalfby;
            Owninguser = owninguser;
            Owningteam = owningteam;
            Ownerid = ownerid;
            Owningbusinessunit = owningbusinessunit;
            IncidentActivityPointers = incidentActivityPointers;
            IncidentSyncErrors = incidentSyncErrors;
            IncidentActivityParties = incidentActivityParties;
            IncidentDuplicateMatchingRecord = incidentDuplicateMatchingRecord;
            IncidentDuplicateBaseRecord = incidentDuplicateBaseRecord;
            IncidentAsyncOperations = incidentAsyncOperations;
            IncidentMailboxTrackingFolder = incidentMailboxTrackingFolder;
            IncidentProcessSessions = incidentProcessSessions;
            IncidentBulkDeleteFailures = incidentBulkDeleteFailures;
            IncidentPrincipalobjectattributeaccess = incidentPrincipalobjectattributeaccess;
            StageidProcessstage = stageidProcessstage;
            IncidentAppointments = incidentAppointments;
            IncidentEmails = incidentEmails;
            IncidentFaxes = incidentFaxes;
            IncidentLetters = incidentLetters;
            IncidentPhonecalls = incidentPhonecalls;
            IncidentTasks = incidentTasks;
            IncidentRecurringAppointmentMasters = incidentRecurringAppointmentMasters;
            IncidentSocialActivities = incidentSocialActivities;
            IncidentConnections1 = incidentConnections1;
            IncidentConnections2 = incidentConnections2;
            IncidentQueueItem = incidentQueueItem;
            IncidentAnnotation = incidentAnnotation;
            SlaidSla = slaidSla;
            SlainvokedidSla = slainvokedidSla;
            SlakpiinstanceIncident = slakpiinstanceIncident;
            IncidentServiceAppointments = incidentServiceAppointments;
            CustomeridAccount = customeridAccount;
            IncidentActioncard = incidentActioncard;
            Responsiblecontactid = responsiblecontactid;
            CustomeridContact = customeridContact;
            Primarycontactid = primarycontactid;
            Contractid = contractid;
            Contractdetailid = contractdetailid;
            Entitlementid = entitlementid;
            IncidentIncidentResolutions = incidentIncidentResolutions;
            IncidentPostFollows = incidentPostFollows;
            IncidentPostRegardings = incidentPostRegardings;
            Existingcase = existingcase;
            IncidentExistingcase = incidentExistingcase;
            Masterid = masterid;
            IncidentMasterIncident = incidentMasterIncident;
            Parentcaseid = parentcaseid;
            IncidentParentIncident = incidentParentIncident;
            OriginatingCaseLead = originatingCaseLead;
            Kbarticleid = kbarticleid;
            KnowledgearticleIncidents = knowledgearticleIncidents;
            KnowledgeBaseRecordIncident = knowledgeBaseRecordIncident;
            IncidentPhonetocaseprocess = incidentPhonetocaseprocess;
            Productid = productid;
            Firstresponsebykpiid = firstresponsebykpiid;
            Resolvebykpiid = resolvebykpiid;
            Socialprofileid = socialprofileid;
            Subjectid = subjectid;
            Transactioncurrencyid = transactioncurrencyid;
            IncidentOpportunityCloses = incidentOpportunityCloses;
            IncidentOrderCloses = incidentOrderCloses;
            IncidentQuoteCloses = incidentQuoteCloses;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_firstresponsebykpiid_value")]
        public string _firstresponsebykpiidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "customersatisfactioncode")]
        public int? Customersatisfactioncode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_existingcase_value")]
        public string _existingcaseValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "customercontacted")]
        public bool? Customercontacted { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "decremententitlementterm")]
        public bool? Decremententitlementterm { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_slaid_value")]
        public string _slaidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "escalatedon")]
        public System.DateTimeOffset? Escalatedon { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_primarycontactid_value")]
        public string _primarycontactidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "stageid")]
        public string Stageid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ticketnumber")]
        public string Ticketnumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_resolvebykpiid_value")]
        public string _resolvebykpiidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_modifiedonbehalfby_value")]
        public string _modifiedonbehalfbyValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "onholdtime")]
        public int? Onholdtime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_entitlementid_value")]
        public string _entitlementidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_accountid_value")]
        public string _accountidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "firstresponseslastatus")]
        public int? Firstresponseslastatus { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isdecrementing")]
        public bool? Isdecrementing { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_owningteam_value")]
        public string _owningteamValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "resolvebyslastatus")]
        public int? Resolvebyslastatus { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "resolveby")]
        public System.DateTimeOffset? Resolveby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "versionnumber")]
        public long? Versionnumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "incidentid")]
        public string Incidentid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "traversedpath")]
        public string Traversedpath { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "activitiescomplete")]
        public bool? Activitiescomplete { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_slainvokedid_value")]
        public string _slainvokedidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isescalated")]
        public bool? Isescalated { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "timezoneruleversionnumber")]
        public int? Timezoneruleversionnumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "servicestage")]
        public int? Servicestage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "entityimage_url")]
        public string EntityimageUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "statuscode")]
        public int? Statuscode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_productid_value")]
        public string _productidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "firstresponsesent")]
        public bool? Firstresponsesent { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_ownerid_value")]
        public string _owneridValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "blockedprofile")]
        public bool? Blockedprofile { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "responseby")]
        public System.DateTimeOffset? Responseby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_parentcaseid_value")]
        public string _parentcaseidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "caseorigincode")]
        public int? Caseorigincode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_modifiedby_value")]
        public string _modifiedbyValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "billedserviceunits")]
        public int? Billedserviceunits { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_customerid_value")]
        public string _customeridValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_owningbusinessunit_value")]
        public string _owningbusinessunitValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "processid")]
        public string Processid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "utcconversiontimezonecode")]
        public int? Utcconversiontimezonecode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "contractservicelevelcode")]
        public int? Contractservicelevelcode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastonholdtime")]
        public System.DateTimeOffset? Lastonholdtime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "importsequencenumber")]
        public int? Importsequencenumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_createdbyexternalparty_value")]
        public string _createdbyexternalpartyValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_contractdetailid_value")]
        public string _contractdetailidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "productserialnumber")]
        public string Productserialnumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_contactid_value")]
        public string _contactidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_modifiedbyexternalparty_value")]
        public string _modifiedbyexternalpartyValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "messagetypecode")]
        public int? Messagetypecode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "exchangerate")]
        [NotMapped] public object Exchangerate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "influencescore")]
        public double? Influencescore { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "numberofchildincidents")]
        public int? Numberofchildincidents { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "severitycode")]
        public int? Severitycode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_masterid_value")]
        public string _masteridValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_owninguser_value")]
        public string _owninguserValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_kbarticleid_value")]
        public string _kbarticleidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "entityimageid")]
        public string Entityimageid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_contractid_value")]
        public string _contractidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "entityimage_timestamp")]
        public long? EntityimageTimestamp { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "emailaddress")]
        public string Emailaddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_createdonbehalfby_value")]
        public string _createdonbehalfbyValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "followupby")]
        public System.DateTimeOffset? Followupby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "title")]
        public string Title { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_createdby_value")]
        public string _createdbyValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "casetypecode")]
        public int? Casetypecode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "routecase")]
        public bool? Routecase { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdon")]
        public System.DateTimeOffset? Createdon { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_transactioncurrencyid_value")]
        public string _transactioncurrencyidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "merged")]
        public bool? Merged { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "followuptaskcreated")]
        public bool? Followuptaskcreated { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_socialprofileid_value")]
        public string _socialprofileidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_subjectid_value")]
        public string _subjectidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "prioritycode")]
        public int? Prioritycode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "modifiedon")]
        public System.DateTimeOffset? Modifiedon { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sentimentvalue")]
        public double? Sentimentvalue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "incidentstagecode")]
        public int? Incidentstagecode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "actualserviceunits")]
        public int? Actualserviceunits { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "checkemail")]
        public bool? Checkemail { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "overriddencreatedon")]
        public System.DateTimeOffset? Overriddencreatedon { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "statecode")]
        public int? Statecode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "entityimage")]
        [NotMapped] public object Entityimage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "incident_SharePointDocumentLocations")]
        [NotMapped] public IList<MicrosoftDynamicsCRMsharepointdocumentlocation> IncidentSharePointDocumentLocations { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdby")]
        public MicrosoftDynamicsCRMsystemuser Createdby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdonbehalfby")]
        public MicrosoftDynamicsCRMsystemuser Createdonbehalfby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "modifiedby")]
        public MicrosoftDynamicsCRMsystemuser Modifiedby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "modifiedonbehalfby")]
        public MicrosoftDynamicsCRMsystemuser Modifiedonbehalfby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "owninguser")]
        public MicrosoftDynamicsCRMsystemuser Owninguser { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "owningteam")]
        public MicrosoftDynamicsCRMteam Owningteam { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ownerid")]
        public MicrosoftDynamicsCRMprincipal Ownerid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "owningbusinessunit")]
        public MicrosoftDynamicsCRMbusinessunit Owningbusinessunit { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Incident_ActivityPointers")]
        [NotMapped] public IList<MicrosoftDynamicsCRMactivitypointer> IncidentActivityPointers { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Incident_SyncErrors")]
        [NotMapped] public IList<MicrosoftDynamicsCRMsyncerror> IncidentSyncErrors { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "incident_activity_parties")]
        [NotMapped] public IList<MicrosoftDynamicsCRMactivityparty> IncidentActivityParties { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Incident_DuplicateMatchingRecord")]
        [NotMapped] public IList<MicrosoftDynamicsCRMduplicaterecord> IncidentDuplicateMatchingRecord { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Incident_DuplicateBaseRecord")]
        [NotMapped] public IList<MicrosoftDynamicsCRMduplicaterecord> IncidentDuplicateBaseRecord { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Incident_AsyncOperations")]
        [NotMapped] public IList<MicrosoftDynamicsCRMasyncoperation> IncidentAsyncOperations { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Incident_MailboxTrackingFolder")]
        [NotMapped] public IList<MicrosoftDynamicsCRMmailboxtrackingfolder> IncidentMailboxTrackingFolder { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Incident_ProcessSessions")]
        [NotMapped] public IList<MicrosoftDynamicsCRMprocesssession> IncidentProcessSessions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Incident_BulkDeleteFailures")]
        [NotMapped] public IList<MicrosoftDynamicsCRMbulkdeletefailure> IncidentBulkDeleteFailures { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "incident_principalobjectattributeaccess")]
        [NotMapped] public IList<MicrosoftDynamicsCRMprincipalobjectattributeaccess> IncidentPrincipalobjectattributeaccess { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "stageid_processstage")]
        public MicrosoftDynamicsCRMprocessstage StageidProcessstage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Incident_Appointments")]
        [NotMapped] public IList<MicrosoftDynamicsCRMappointment> IncidentAppointments { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Incident_Emails")]
        [NotMapped] public IList<MicrosoftDynamicsCRMemail> IncidentEmails { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Incident_Faxes")]
        [NotMapped] public IList<MicrosoftDynamicsCRMfax> IncidentFaxes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Incident_Letters")]
        [NotMapped] public IList<MicrosoftDynamicsCRMletter> IncidentLetters { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Incident_Phonecalls")]
        [NotMapped] public IList<MicrosoftDynamicsCRMphonecall> IncidentPhonecalls { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Incident_Tasks")]
        [NotMapped] public IList<MicrosoftDynamicsCRMtask> IncidentTasks { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Incident_RecurringAppointmentMasters")]
        [NotMapped] public IList<MicrosoftDynamicsCRMrecurringappointmentmaster> IncidentRecurringAppointmentMasters { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Incident_SocialActivities")]
        [NotMapped] public IList<MicrosoftDynamicsCRMsocialactivity> IncidentSocialActivities { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "incident_connections1")]
        [NotMapped] public IList<MicrosoftDynamicsCRMconnection> IncidentConnections1 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "incident_connections2")]
        [NotMapped] public IList<MicrosoftDynamicsCRMconnection> IncidentConnections2 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Incident_QueueItem")]
        [NotMapped] public IList<MicrosoftDynamicsCRMqueueitem> IncidentQueueItem { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Incident_Annotation")]
        [NotMapped] public IList<MicrosoftDynamicsCRMannotation> IncidentAnnotation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "slaid_sla")]
        public MicrosoftDynamicsCRMsla SlaidSla { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "slainvokedid_sla")]
        public MicrosoftDynamicsCRMsla SlainvokedidSla { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "slakpiinstance_incident")]
        [NotMapped] public IList<MicrosoftDynamicsCRMslakpiinstance> SlakpiinstanceIncident { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Incident_ServiceAppointments")]
        [NotMapped] public IList<MicrosoftDynamicsCRMserviceappointment> IncidentServiceAppointments { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "customerid_account")]
        public MicrosoftDynamicsCRMaccount CustomeridAccount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "incident_actioncard")]
        [NotMapped] public IList<MicrosoftDynamicsCRMactioncard> IncidentActioncard { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "responsiblecontactid")]
        public MicrosoftDynamicsCRMcontact Responsiblecontactid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "customerid_contact")]
        public MicrosoftDynamicsCRMcontact CustomeridContact { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "primarycontactid")]
        public MicrosoftDynamicsCRMcontact Primarycontactid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "contractid")]
        public MicrosoftDynamicsCRMcontract Contractid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "contractdetailid")]
        public MicrosoftDynamicsCRMcontractdetail Contractdetailid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "entitlementid")]
        public MicrosoftDynamicsCRMentitlement Entitlementid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Incident_IncidentResolutions")]
        [NotMapped] public IList<MicrosoftDynamicsCRMincidentresolution> IncidentIncidentResolutions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "incident_PostFollows")]
        [NotMapped] public IList<MicrosoftDynamicsCRMpostfollow> IncidentPostFollows { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "incident_PostRegardings")]
        [NotMapped] public IList<MicrosoftDynamicsCRMpostregarding> IncidentPostRegardings { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "existingcase")]
        public MicrosoftDynamicsCRMincident Existingcase { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "incident_existingcase")]
        [NotMapped] public IList<MicrosoftDynamicsCRMincident> IncidentExistingcase { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "masterid")]
        public MicrosoftDynamicsCRMincident Masterid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "incident_master_incident")]
        [NotMapped] public IList<MicrosoftDynamicsCRMincident> IncidentMasterIncident { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "parentcaseid")]
        public MicrosoftDynamicsCRMincident Parentcaseid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "incident_parent_incident")]
        [NotMapped] public IList<MicrosoftDynamicsCRMincident> IncidentParentIncident { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OriginatingCase_Lead")]
        [NotMapped] public IList<MicrosoftDynamicsCRMlead> OriginatingCaseLead { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "kbarticleid")]
        public MicrosoftDynamicsCRMkbarticle Kbarticleid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "knowledgearticle_incidents")]
        [NotMapped] public IList<MicrosoftDynamicsCRMknowledgearticleincident> KnowledgearticleIncidents { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "KnowledgeBaseRecord_Incident")]
        [NotMapped] public IList<MicrosoftDynamicsCRMknowledgebaserecord> KnowledgeBaseRecordIncident { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "incident_phonetocaseprocess")]
        [NotMapped] public IList<MicrosoftDynamicsCRMphonetocaseprocess> IncidentPhonetocaseprocess { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "productid")]
        public MicrosoftDynamicsCRMproduct Productid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "firstresponsebykpiid")]
        public MicrosoftDynamicsCRMslakpiinstance Firstresponsebykpiid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "resolvebykpiid")]
        public MicrosoftDynamicsCRMslakpiinstance Resolvebykpiid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "socialprofileid")]
        public MicrosoftDynamicsCRMsocialprofile Socialprofileid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "subjectid")]
        public MicrosoftDynamicsCRMsubject Subjectid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "transactioncurrencyid")]
        public MicrosoftDynamicsCRMtransactioncurrency Transactioncurrencyid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "incident_OpportunityCloses")]
        [NotMapped] public IList<MicrosoftDynamicsCRMopportunityclose> IncidentOpportunityCloses { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "incident_OrderCloses")]
        [NotMapped] public IList<MicrosoftDynamicsCRMorderclose> IncidentOrderCloses { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "incident_QuoteCloses")]
        [NotMapped] public IList<MicrosoftDynamicsCRMquoteclose> IncidentQuoteCloses { get; set; }

    }
}
